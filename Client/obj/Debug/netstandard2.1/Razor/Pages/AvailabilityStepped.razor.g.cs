#pragma checksum "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "16b88a55d08cccb4dca70a76bf0f27db4f24601a"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorSignalRApp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using BlazorSignalRApp.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using BlazorSignalRApp.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using Blazor.Extensions.Canvas;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/_Imports.razor"
using ChartJs.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using BlazorSignalRApp.Shared.Models.OEE;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using ChartJs.Blazor.ChartJS.LineChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using ChartJs.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using ChartJs.Blazor.ChartJS.Common.Properties;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using ChartJs.Blazor.Util;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/availabilityStepped")]
    public partial class AvailabilityStepped : AvailabilityChartComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1>Availability</h1>\n\n");
            __builder.AddMarkupContent(1, "<p>Using charts</p>\n\n");
#nullable restore
#line 20 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
 if (availabilityList == null)
{

#line default
#line hidden
#nullable disable
            __builder.AddContent(2, "    ");
            __builder.OpenComponent<ChartJs.Blazor.Charts.ChartJsLineChart>(3);
            __builder.AddAttribute(4, "Config", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<ChartJs.Blazor.ChartJS.LineChart.LineConfig>(
#nullable restore
#line 22 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                                   _config

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(5, "Width", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32?>(
#nullable restore
#line 22 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                                                   300

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(6, "Height", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32?>(
#nullable restore
#line 22 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                                                                150

#line default
#line hidden
#nullable disable
            ));
            __builder.AddComponentReferenceCapture(7, (__value) => {
#nullable restore
#line 22 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                            _lineChartJs = (ChartJs.Blazor.Charts.ChartJsLineChart)__value;

#line default
#line hidden
#nullable disable
            }
            );
            __builder.CloseComponent();
            __builder.AddMarkupContent(8, "\n");
#nullable restore
#line 23 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
}
else
{

#line default
#line hidden
#nullable disable
            __builder.AddContent(9, "    ");
            __builder.OpenElement(10, "div");
            __builder.AddAttribute(11, "class", "containter");
            __builder.AddMarkupContent(12, "\n        ");
            __builder.OpenElement(13, "div");
            __builder.AddAttribute(14, "class", "row");
            __builder.AddMarkupContent(15, "\n            <div class=\"col\"></div>\n            ");
            __builder.OpenElement(16, "div");
            __builder.AddAttribute(17, "class", "col-6");
            __builder.AddMarkupContent(18, "\n                ");
            __builder.OpenComponent<ChartJs.Blazor.Charts.ChartJsLineChart>(19);
            __builder.AddAttribute(20, "Config", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<ChartJs.Blazor.ChartJS.LineChart.LineConfig>(
#nullable restore
#line 30 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                                               _config

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(21, "Width", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32?>(
#nullable restore
#line 30 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                                                               300

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(22, "Height", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Int32?>(
#nullable restore
#line 30 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                                                                            150

#line default
#line hidden
#nullable disable
            ));
            __builder.AddComponentReferenceCapture(23, (__value) => {
#nullable restore
#line 30 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                                        _lineChartJs = (ChartJs.Blazor.Charts.ChartJsLineChart)__value;

#line default
#line hidden
#nullable disable
            }
            );
            __builder.CloseComponent();
            __builder.AddMarkupContent(24, "\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(25, "\n            <div class=\"col\"></div>\n\n        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(26, "\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(27, "\n    ");
            __builder.OpenElement(28, "div");
            __builder.AddMarkupContent(29, "\n        ");
            __builder.OpenElement(30, "table");
            __builder.AddAttribute(31, "class", "tableDowntime");
            __builder.AddMarkupContent(32, "\n            ");
            __builder.AddMarkupContent(33, "<thead>\n                <tr>\n                    <th>Uptime</th>\n                    <th>Downtime</th>\n                </tr>\n            </thead>\n            ");
            __builder.OpenElement(34, "tbody");
            __builder.AddMarkupContent(35, "\n                ");
            __builder.OpenElement(36, "tr");
            __builder.AddMarkupContent(37, "\n                    ");
            __builder.OpenElement(38, "td");
            __builder.AddContent(39, 
#nullable restore
#line 46 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         dataDowntime[0]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(40, "\n                    ");
            __builder.OpenElement(41, "td");
            __builder.AddContent(42, 
#nullable restore
#line 47 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         dataDowntime[1]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(43, "\n                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(44, "\n            ");
            __builder.CloseElement();
            __builder.AddMarkupContent(45, "\n        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(46, "\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(47, "\n    ");
            __builder.OpenElement(48, "div");
            __builder.AddMarkupContent(49, "\n        ");
            __builder.OpenElement(50, "table");
            __builder.AddAttribute(51, "class", "table");
            __builder.AddMarkupContent(52, "\n        ");
            __builder.AddMarkupContent(53, @"<thead> 
            <tr>
                <th>Department</th>
                <th>Area</th>
                <th>Line</th>
                <th>Operation</th>
                <th>Available</th>
                <th>Fail Code</th>
                <th>Event Time</th>
            </tr>
        </thead>
        ");
            __builder.OpenElement(54, "tbody");
            __builder.AddMarkupContent(55, "\n");
#nullable restore
#line 66 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
             foreach (var field in availabilityList)
            {

#line default
#line hidden
#nullable disable
            __builder.AddContent(56, "                ");
            __builder.OpenElement(57, "tr");
            __builder.AddMarkupContent(58, "\n                    ");
            __builder.OpenElement(59, "td");
            __builder.AddContent(60, 
#nullable restore
#line 69 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.Department

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(61, "\n                    ");
            __builder.OpenElement(62, "td");
            __builder.AddContent(63, 
#nullable restore
#line 70 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.Area

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(64, "\n                    ");
            __builder.OpenElement(65, "td");
            __builder.AddContent(66, 
#nullable restore
#line 71 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.LineName

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(67, "\n                    ");
            __builder.OpenElement(68, "td");
            __builder.AddContent(69, 
#nullable restore
#line 72 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.OpName

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(70, "\n                    ");
            __builder.OpenElement(71, "td");
            __builder.AddContent(72, 
#nullable restore
#line 73 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.Available

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(73, "\n                    ");
            __builder.OpenElement(74, "td");
            __builder.AddContent(75, 
#nullable restore
#line 74 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.FailCode

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(76, "\n                    ");
            __builder.OpenElement(77, "td");
            __builder.AddContent(78, 
#nullable restore
#line 75 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
                         field.EventTime

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(79, "\n                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(80, "\n");
#nullable restore
#line 77 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
            }

#line default
#line hidden
#nullable disable
            __builder.AddContent(81, "        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(82, "\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(83, "\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(84, "\n");
#nullable restore
#line 81 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 84 "/Users/gerardoalbor/Repositories/BlazorTest/ChatTutorial/BlazorSignalRApp/Client/Pages/AvailabilityStepped.razor"
      
    private List<Availability> availabilityList;
    private HubConnection hubConnection;
    private ChartJsLineChart _lineChartJs;
    private LineConfig _config;
    private LineData lineData;
    private LineDataset<double[]> lineSet;
    private double[] dataDowntime;


    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()  
            .WithUrl(NavigationManager.ToAbsoluteUri("/oeeHub"))  
            .Build();

        _config = new LineConfig()
        {
            Options = new LineOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Simple Bar Chart"
                },
                Legend = new ChartJs.Blazor.ChartJS.Common.Handlers.Legend
                {
                    Display = false
                },
                MaintainAspectRatio = false,
                Responsive = true
            }
        };

        lineData = new LineData()
        {
            Labels = new List<string>(new string[] {"Hello", "World", "Amigo"})
        };

        lineSet = new LineDataset<double[]>()
            {
                Label = "My double dataset",
                BackgroundColor = "ff0000",
                BorderWidth = 1,
                PointBackgroundColor = "#009900",
                PointRadius = 3,
                BorderColor = "#ffffff",
                SteppedLine = ChartJs.Blazor.ChartJS.Common.Enums.SteppedLine.True
            };

        lineSet.AddRange(new [] {
            //new DataPoints() { xAxis = new DateTime(20,07,02,12,00,00), yAxis = 1},
            //new DataPoints() { xAxis = new DateTime(20,07,02,12,20,00), yAxis = 0},
            //new DataPoints() { xAxis = new DateTime(20,07,02,13,00,00), yAxis = 1}
            new double[]{1,2},
            new double[]{2,0},
            new double[]{3,5}
        });
        lineSet.Add(new double[]{4,2});


        //_config.Data.Labels.AddRange(new[] {"A", "B", "C"});
        _config.Data.Labels = null;
        _config.Data.Datasets.Add(lineSet);

        
  
        hubConnection.On("ReceiveMessage", () =>  
        {  
            CallLoadData();  
            StateHasChanged();  
        });  
  
        await hubConnection.StartAsync();  
  
        await LoadData();
    }

    private void CallLoadData()   
    {  
        Task.Run(async () =>  
        {  
            await LoadData();  
        });  
    }  
  
    protected async Task LoadData()  
    {  
        FromToTime timeInterval = new FromToTime()
            {From = new DateTime(2020, 06, 23),
            To = new DateTime(2020, 06, 24)};

        /*using (var client = new HttpClient())
        {
        var res = client.GetFromJsonAsync("api/oee/availability/1/10/timeFilter", 
            new StringContent(JsonConvert.SerializeObject(timeInterval)));

        try
        {
            res.Result.EnsureSuccessStatusCode();
        } 
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
        }
        } */  
        
        availabilityList = await Http.GetFromJsonAsync<List<Availability>>("api/oee/availability/1/10/20200623T0000Z/20200624T0000Z");
        dataDowntime = CalculateDowntime(availabilityList);

        //lineSet.Data.Clear();
        //_config.Data.Datasets.Clear();
        //lineSet.Data = new ;
        //_config.Data.Datasets.Add(lineSet);

        StateHasChanged();  
    }

    public class DataPoints
    {
        private int _xAxis;
        public int xAxis
        {
            get { return _xAxis; }
            set { _xAxis = value; }
        }
        
        private int _yAxis;
        public int yAxis
        {
            get { return _yAxis; }
            set { _yAxis = value; }
        }
        
    }

    public class FromToTime
        {
            private DateTime _from;
            public DateTime From
            {
                get { return _from; }
                set { _from = value; }
            }
            
            private DateTime _to;
            public DateTime To
            {
                get { return _to; }
                set { _to = value; }
            }
        }

    private double[] CalculateDowntime(List<Availability> availabilityList)
    {
        double[] output = new double[] {0,0};

        // Sorting should not be necessary 
        //availabilityList.Sort(delegate(Availability x, Availability y)
        //{
        //    if(x.EventTime == null && y.EventTime == null) return 0;
        //    else if (x.EventTime == null) return -1;
        //    else if (y.EventTime == null) return 1;
        //    else return x.EventTime.CompareTo(y.EventTime);
        //});

        double uptime = 0;
        double downtime = 0;
        double prevTicks = availabilityList.First().EventTime.Ticks;

        double totalTicks = (availabilityList.First().EventTime.Ticks - availabilityList.Last().EventTime.Ticks);

        foreach (Availability item in availabilityList)
        {
            if(item.Available == false)
            {
                downtime += prevTicks - item.EventTime.Ticks;
            }
            else
            {
                uptime += prevTicks - item.EventTime.Ticks;
            }

            prevTicks = item.EventTime.Ticks;
        }

        output[0] = ((uptime) / totalTicks * 100 );
        output[1] = ((downtime) / totalTicks * 100);

        return output;
    }
  
    public bool IsConnected =>  
        hubConnection.State == HubConnectionState.Connected;  
  
    public void Dispose()  
    {  
        _ = hubConnection.DisposeAsync();  
    }  

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
